<!-- Products Carousel Section for Shopify Dawn Theme - Streetwear Store -->
{% assign collection_handle = section.settings.collection %}
{% assign collection = collections[collection_handle] %}
{% assign products_to_show = section.settings.products_to_show | default: 8 %}
{% assign products_per_view = section.settings.products_per_view | default: 4 %}
{% assign products_per_view_mobile = section.settings.products_per_view_mobile | default: 2 %}

{% unless template.name == 'cart' or request.page_type == 'cart' %}
  <!-- Your existing gift threshold section content goes here -->
  
  <div class="gift-threshold" data-threshold="{{ threshold }}">
    <!-- All your gift threshold content -->
  </div>
  
{% endunless %}

<section class="products-carousel section-{{ section.id }}" data-section-id="{{ section.id }}">
  <style>
    .products-carousel {
      padding: 3rem 0;
      background: {{ section.settings.background_color | default: '#FFFFFF' }};
    }

    .products-carousel__container {
      max-width: var(--page-width);
      margin: 0 auto;
      padding: 0 1.5rem;
    }

    .products-carousel__header {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-bottom: 2rem;
    }

    .products-carousel__title {
      font-family: var(--font-heading-family);
      font-size: 2.5rem;
      font-weight: var(--font-heading-weight);
      text-transform: uppercase;
      margin: 0;
    }

    .products-carousel__controls {
      display: flex;
      gap: 0.5rem;
    }

    .carousel-nav-button {
      width: 40px;
      height: 40px;
      background: #000;
      border: none;
      color: white;
      display: flex;
      align-items: center;
      justify-content: center;
      cursor: pointer;
      transition: opacity 0.2s ease;
    }

    .carousel-nav-button:hover {
      opacity: 0.8;
    }

    .carousel-nav-button:disabled {
      opacity: 0.3;
      cursor: not-allowed;
    }

    .carousel-nav-button svg {
      width: 20px;
      height: 20px;
      fill: currentColor;
    }

    .products-carousel__track-wrapper {
      overflow: hidden;
    }

    .products-carousel__track {
      display: flex;
      transition: transform 0.3s ease;
      gap: 1rem;
    }

    .carousel-product {
      flex: 0 0 calc(100% / {{ products_per_view }} - 0.75rem);
      min-width: 0;
      background: #fff;
      border: 1px solid #e5e5e5;
      text-decoration: none;
      display: block;
    }

    @media (max-width: 767px) {
      .carousel-product {
        flex: 0 0 calc(100% / {{ products_per_view_mobile }} - 0.5rem);
      }
    }

    .carousel-product__media {
      position: relative;
      aspect-ratio: 1/1;
      overflow: hidden;
      background: #f8f8f8;
    }

    .carousel-product__image {
      width: 100%;
      height: 100%;
      object-fit: contain;
      display: block;
      mix-blend-mode: multiply;
    }

    .carousel-product__badge {
      position: absolute;
      top: 0.5rem;
      left: 0.5rem;
      background: #ff0000;
      color: white;
      padding: 0.25rem 0.5rem;
      font-size: 0.75rem;
      font-weight: 600;
      text-transform: uppercase;
      z-index: 1;
    }

    .carousel-product__badge--soldout {
      background: #000;
    }

    .carousel-product__info {
      padding: 1rem;
    }

    .carousel-product__vendor {
      font-size: 0.75rem;
      text-transform: uppercase;
      color: #666;
      margin: 0 0 0.25rem;
    }

    .carousel-product__title {
      font-size: 1rem;
      color: #000;
      margin: 0 0 0.5rem;
      text-transform: uppercase;
      font-weight: 600;
    }

    .carousel-product__price-wrapper {
      display: flex;
      align-items: center;
      gap: 0.5rem;
    }

    .carousel-product__price {
      font-size: 1rem;
      font-weight: 600;
      color: #000;
    }

    .carousel-product__price--sale {
      color: #ff0000;
    }

    .carousel-product__price--compare {
      font-size: 0.9rem;
      color: #999;
      text-decoration: line-through;
    }

    .carousel-pagination {
      display: flex;
      justify-content: center;
      gap: 0.5rem;
      margin-top: 2rem;
    }

    .carousel-dot {
      width: 8px;
      height: 8px;
      border-radius: 50%;
      background: #ccc;
      border: none;
      cursor: pointer;
      transition: background 0.2s ease;
      padding: 0;
    }

    .carousel-dot--active {
      background: #000;
    }

    @media (max-width: 767px) {
      .products-carousel__header {
        flex-direction: column;
        align-items: flex-start;
        gap: 1rem;
      }

      .products-carousel__controls {
        align-self: flex-end;
      }

      .products-carousel__title {
        font-size: 1.8rem;
      }
    }
  </style>

  <div class="products-carousel__container">
    <div class="products-carousel__header">
      <div class="products-carousel__title-wrapper">
        {% if section.settings.title != blank %}
          <h2 class="products-carousel__title">{{ section.settings.title }}</h2>
        {% endif %}
      </div>

      <div class="products-carousel__controls">
        <button class="carousel-nav-button carousel-nav-button--prev" aria-label="Previous products">
          <svg viewBox="0 0 24 24">
            <path d="M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z"/>
          </svg>
        </button>
        <button class="carousel-nav-button carousel-nav-button--next" aria-label="Next products">
          <svg viewBox="0 0 24 24">
            <path d="M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z"/>
          </svg>
        </button>
      </div>
    </div>

    <div class="products-carousel__track-wrapper">
      <div class="products-carousel__track" data-carousel-track>
        {% if collection != blank %}
          {% for product in collection.products limit: products_to_show %}
            <a href="{{ product.url }}" class="carousel-product" data-product-id="{{ product.id }}">
              <div class="carousel-product__media">
                {% if product.featured_image %}
                  <img 
                    class="carousel-product__image"
                    src="{{ product.featured_image | image_url: width: 500 }}"
                    alt="{{ product.title | escape }}"
                    loading="lazy"
                    width="500"
                    height="500"
                  >
                {% else %}
                  {{ 'product-1' | placeholder_svg_tag: 'carousel-product__image' }}
                {% endif %}

                {% if product.available == false %}
                  <span class="carousel-product__badge carousel-product__badge--soldout">Sold Out</span>
                {% elsif product.compare_at_price > product.price %}
                  <span class="carousel-product__badge">Sale</span>
                {% endif %}
              </div>

              <div class="carousel-product__info">
                {% if section.settings.show_vendor and product.vendor %}
                  <p class="carousel-product__vendor">{{ product.vendor }}</p>
                {% endif %}
                
                <h3 class="carousel-product__title">{{ product.title }}</h3>
                
                <div class="carousel-product__price-wrapper">
                  {% if product.compare_at_price > product.price %}
                    <span class="carousel-product__price carousel-product__price--sale">{{ product.price | money_without_currency }}</span>
                    <span class="carousel-product__price carousel-product__price--compare">{{ product.compare_at_price | money_without_currency }}</span>
                  {% else %}
                    <span class="carousel-product__price">{{ product.price | money_without_currency }}</span>
                  {% endif %}
                </div>
              </div>
            </a>
          {% endfor %}
        {% else %}
          {% comment %} Placeholder products for theme editor {% endcomment %}
          {% for i in (1..products_to_show) %}
            <div class="carousel-product">
              <div class="carousel-product__media">
                {{ 'product-' | append: i | placeholder_svg_tag: 'carousel-product__image' }}
              </div>
              <div class="carousel-product__info">
                <h3 class="carousel-product__title">Example Product {{ i }}</h3>
                <div class="carousel-product__price-wrapper">
                  <span class="carousel-product__price">$99.00</span>
                </div>
              </div>
            </div>
          {% endfor %}
        {% endif %}
      </div>
    </div>

    <div class="carousel-pagination" data-carousel-pagination></div>
  </div>
</section>

<script>
  (function() {
    const carousel = document.querySelector('.section-{{ section.id }}');
    const track = carousel.querySelector('[data-carousel-track]');
    const prevButton = carousel.querySelector('.carousel-nav-button--prev');
    const nextButton = carousel.querySelector('.carousel-nav-button--next');
    const pagination = carousel.querySelector('[data-carousel-pagination]');
    
    const products = track.querySelectorAll('.carousel-product');
    const productsPerView = window.innerWidth > 767 ? {{ products_per_view }} : {{ products_per_view_mobile }};
    const totalProducts = products.length;
    const totalPages = Math.ceil(totalProducts / productsPerView);
    
    let currentPage = 0;

    // Create pagination dots
    function createPagination() {
      pagination.innerHTML = '';
      for (let i = 0; i < totalPages; i++) {
        const dot = document.createElement('button');
        dot.className = 'carousel-dot';
        if (i === 0) dot.classList.add('carousel-dot--active');
        dot.addEventListener('click', () => goToPage(i));
        pagination.appendChild(dot);
      }
    }

    // Update carousel position
    function updateCarousel() {
      const productWidth = products[0].offsetWidth;
      const gap = parseFloat(getComputedStyle(track).gap) || 16;
      const translateX = -(currentPage * (productWidth + gap) * productsPerView);
      track.style.transform = `translateX(${translateX}px)`;

      prevButton.disabled = currentPage === 0;
      nextButton.disabled = currentPage === totalPages - 1;

      const dots = pagination.querySelectorAll('.carousel-dot');
      dots.forEach((dot, index) => {
        dot.classList.toggle('carousel-dot--active', index === currentPage);
      });
    }

    function goToPage(page) {
      currentPage = Math.max(0, Math.min(page, totalPages - 1));
      updateCarousel();
    }

    prevButton.addEventListener('click', () => {
      if (currentPage > 0) {
        currentPage--;
        updateCarousel();
      }
    });

    nextButton.addEventListener('click', () => {
      if (currentPage < totalPages - 1) {
        currentPage++;
        updateCarousel();
      }
    });

    createPagination();
    updateCarousel();
  })();
</script>

{% schema %}
{
  "name": "Products Carousel",
  "class": "section-products-carousel",
  "settings": [
    {
      "type": "text",
      "id": "title",
      "label": "Title",
      "default": "Featured Products"
    },
    {
      "type": "collection",
      "id": "collection",
      "label": "Collection"
    },
    {
      "type": "range",
      "id": "products_to_show",
      "min": 4,
      "max": 20,
      "step": 1,
      "default": 12,
      "label": "Total products to show"
    },
    {
      "type": "range",
      "id": "products_per_view",
      "min": 3,
      "max": 6,
      "step": 1,
      "default": 4,
      "label": "Products per view (desktop)"
    },
    {
      "type": "range",
      "id": "products_per_view_mobile",
      "min": 1,
      "max": 3,
      "step": 1,
      "default": 2,
      "label": "Products per view (mobile)"
    },
    {
      "type": "checkbox",
      "id": "show_vendor",
      "label": "Show vendor/brand",
      "default": false
    },
    {
      "type": "color",
      "id": "background_color",
      "label": "Background color",
      "default": "#FFFFFF"
    }
  ],
  "presets": [
    {
      "name": "Products Carousel",
      "category": "Collection"
    }
  ]
}
{% endschema %}