{% comment %}
  Gift Threshold - All States Preloaded
  File: sections/free-gift-threshold.liquid
{% endcomment %}

{%- liquid
  assign cart_total = cart.total_price
  assign threshold = section.settings.threshold | times: 100
  assign remaining = threshold | minus: cart_total
  assign sample_product = section.settings.sample_product
  
  if cart_total >= threshold
    assign threshold_reached = true
  else
    assign threshold_reached = false
  endif
  
  assign progress_percentage = 0
  if cart_total > 0 and threshold > 0
    assign progress_percentage = cart_total | times: 100.0 | divided_by: threshold
    if progress_percentage > 100
      assign progress_percentage = 100
    endif
  endif
  
  assign has_sample = false
  assign sample_info = ''
  assign selected_product_handle = ''
  assign selected_product_image = ''
  
  for item in cart.items
    assign is_free_sample = item.properties._is_free_sample | default: 'false'
    if is_free_sample == 'true'
      assign has_sample = true
      assign sample_info = item.properties['Wybrany produkt'] | default: ''
      assign selected_product_handle = item.properties._selected_product_handle | default: ''
      assign selected_product_image = item.properties._selected_product_image | default: ''
      break
    endif
  endfor
  
  if has_sample
    assign initial_state = 'success'
  elsif threshold_reached
    assign initial_state = 'selector'
  else
    assign initial_state = 'info'
  endif
-%}

{{ 'gift-threshold.css' | asset_url | stylesheet_tag }}
<script src="{{ 'gift-threshold-validator.js' | asset_url }}" defer></script>

<style>
  .gift-threshold {
    background: {{ section.settings.section_bg_color }};
    color: {{ section.settings.text_color }};
    padding: {{ section.settings.section_padding }}px;
    border-radius: {{ section.settings.section_radius }}px;
    text-align: {{ section.settings.text_align }};
    margin: 20px auto;
    max-width: 1200px;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05);
  }
  
  /* State visibility control */
  .gift-threshold[data-state="info"] .gift-threshold__info { display: block !important; }
  .gift-threshold[data-state="info"] .gift-threshold__selector { display: none !important; }
  .gift-threshold[data-state="info"] .gift-threshold__success { display: none !important; }
  
  .gift-threshold[data-state="selector"] .gift-threshold__info { display: none !important; }
  .gift-threshold[data-state="selector"] .gift-threshold__selector { display: block !important; }
  .gift-threshold[data-state="selector"] .gift-threshold__success { display: none !important; }
  
  .gift-threshold[data-state="success"] .gift-threshold__info { display: none !important; }
  .gift-threshold[data-state="success"] .gift-threshold__selector { display: none !important; }
  .gift-threshold[data-state="success"] .gift-threshold__success { display: block !important; }
  
  .gift-threshold__message {
    font-size: {{ section.settings.message_font_size }}px;
    margin-bottom: 20px;
    font-weight: 500;
  }
  
  .gift-threshold__amount {
    color: {{ section.settings.accent_color }};
    font-weight: 700;
    font-size: 1.3em;
  }
  
  .gift-threshold__title {
    font-size: {{ section.settings.title_font_size }}px;
    margin-bottom: 20px;
    font-weight: 700;
    color: {{ section.settings.text_color }};
  }
  
  .gift-threshold__progress {
    height: {{ section.settings.progress_height }}px;
    background: #e5e7eb;
    border-radius: {{ section.settings.progress_height | divided_by: 2 }}px;
    overflow: hidden;
    margin-bottom: 16px;
  }
  
  .gift-threshold__progress-bar {
    height: 100%;
    background: linear-gradient(90deg, #22c55e, #16a34a);
    transition: width 0.5s ease;
  }
  
  .gift-threshold__search {
    width: 100%;
    max-width: 400px;
    padding: 14px 20px;
    border: 2px solid #e0e0e0;
    border-radius: 8px;
    font-size: 16px;
    margin: 0 auto 25px auto;
    display: block;
    background: white;
  }
  
  .gift-threshold__search:focus {
    outline: none;
    border-color: {{ section.settings.accent_color }};
    box-shadow: 0 0 0 3px rgba(220, 38, 38, 0.1);
  }
  
  .gift-threshold__products-grid {
    display: grid;
    grid-template-columns: repeat({{ section.settings.grid_columns }}, 1fr);
    gap: 16px;
    max-height: {{ section.settings.grid_max_height }}px;
    overflow-y: auto;
    padding: 20px;
    background: #f9fafb;
    border: 1px solid #e0e0e0;
    border-radius: 10px;
    margin-bottom: 25px;
  }
  
  .gift-threshold__products-grid::-webkit-scrollbar {
    width: 8px;
  }
  
  .gift-threshold__products-grid::-webkit-scrollbar-track {
    background: #f3f4f6;
    border-radius: 4px;
  }
  
  .gift-threshold__products-grid::-webkit-scrollbar-thumb {
    background: #d1d5db;
    border-radius: 4px;
  }
  
  .gift-threshold__product-card {
    padding: 14px;
    border: 2px solid {{ section.settings.card_border_color }};
    border-radius: 10px;
    text-align: center;
    background: white;
    position: relative;
    transition: all 0.3s ease;
    cursor: pointer;
  }
  
  .gift-threshold__product-card:hover {
    border-color: {{ section.settings.card_selected_color }};
    transform: translateY(-4px);
    box-shadow: 0 8px 20px rgba(0, 0, 0, 0.1);
  }
  
  .gift-threshold__product-card.selected {
    border-color: {{ section.settings.card_selected_color }};
    background: linear-gradient(135deg, #ffffff, #f0fdf4);
    box-shadow: 0 8px 24px rgba(16, 185, 129, 0.2);
  }
  
  .gift-threshold__product-card.selected::after {
    content: "✓";
    position: absolute;
    top: 10px;
    right: 10px;
    background: {{ section.settings.card_selected_color }};
    color: white;
    width: 24px;
    height: 24px;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 14px;
    font-weight: 700;
  }
  
  .gift-threshold__product-image {
    width: 100%;
    height: {{ section.settings.product_image_height }}px;
    object-fit: cover;
    border-radius: 8px;
    margin-bottom: 12px;
  }
  
  .gift-threshold__product-title {
    font-size: 14px;
    line-height: 1.4;
    margin-bottom: 12px;
    font-weight: 600;
    min-height: 38px;
    display: flex;
    align-items: center;
    justify-content: center;
    color: #374151;
  }
  
  .gift-threshold__variant-select {
    width: 100%;
    padding: 10px;
    border: 1px solid #ddd;
    border-radius: 6px;
    font-size: 13px;
    background: white;
    cursor: pointer;
    margin-top: 6px;
  }
  
  .gift-threshold__variant-select:focus {
    outline: 2px solid {{ section.settings.accent_color }};
    outline-offset: 1px;
  }
  
  .gift-threshold__choose-btn {
    width: 100%;
    padding: 11px;
    background: {{ section.settings.button_bg_color }};
    color: {{ section.settings.button_text_color }};
    border: none;
    border-radius: 6px;
    font-size: 13px;
    font-weight: 600;
    cursor: pointer;
    margin-top: 6px;
    transition: all 0.3s ease;
  }
  
  .gift-threshold__choose-btn:hover {
    background: {{ section.settings.button_hover_color }};
    transform: translateY(-1px);
  }
  
  .gift-threshold__selected {
    padding: 24px;
    background: linear-gradient(135deg, #f8f9fa, #f0fdf4);
    border-radius: 10px;
    margin-top: 25px;
    border: 2px solid {{ section.settings.card_selected_color }};
    box-shadow: 0 4px 12px rgba(16, 185, 129, 0.1);
  }
  
  .gift-threshold__selected-info {
    display: flex;
    align-items: center;
    gap: 16px;
    margin-bottom: 20px;
    padding: 16px;
    background: white;
    border-radius: 8px;
    border: 1px solid #e5e7eb;
  }
  
  .gift-threshold__selected-image {
    width: 80px;
    height: 80px;
    object-fit: cover;
    border-radius: 8px;
    border: 2px solid {{ section.settings.card_selected_color }};
  }
  
  .gift-threshold__selected-details {
    flex: 1;
    text-align: left;
  }
  
  .gift-threshold__selected-title {
    font-size: 16px;
    font-weight: 700;
    color: #065f46;
    margin-bottom: 4px;
  }
  
  .gift-threshold__selected-variant {
    font-size: 14px;
    color: #6b7280;
    margin-bottom: 4px;
  }
  
  .gift-threshold__selected-price {
    font-size: 14px;
    color: #059669;
    font-weight: 600;
  }
  
  .gift-threshold__button {
    padding: 16px 32px;
    background: linear-gradient(135deg, {{ section.settings.button_bg_color }}, {{ section.settings.button_hover_color }});
    color: {{ section.settings.button_text_color }};
    border: none;
    border-radius: 8px;
    font-size: 16px;
    font-weight: 700;
    cursor: pointer;
    width: 100%;
    text-transform: uppercase;
    letter-spacing: 0.5px;
  }
  
  .gift-threshold__button:disabled {
    opacity: 0.5;
    cursor: not-allowed;
  }
  
  .gift-threshold__success {
    text-align: center;
    padding: 36px;
    background: linear-gradient(135deg, #f0fdf4, #dcfce7);
    border-radius: 12px;
    border: 2px solid {{ section.settings.card_selected_color }};
  }
  
  .gift-threshold__success-info {
    display: inline-flex;
    align-items: center;
    gap: 16px;
    margin: 24px auto;
    padding: 16px;
    background: white;
    border: 2px solid #10b981;
    border-radius: 8px;
  }
  
  .gift-threshold__success-image {
    width: 60px;
    height: 60px;
    object-fit: cover;
    border-radius: 6px;
  }
  
  .gift-threshold__error {
    background: #fef2f2;
    border: 2px solid #fca5a5;
    border-radius: 10px;
    padding: 18px;
    color: #dc2626;
    text-align: center;
    margin-bottom: 22px;
  }
  
  .gift-threshold__progress-info {
    display: flex;
    justify-content: space-between;
    font-size: 14px;
    color: #6b7280;
  }
  
  @keyframes slideIn {
    from { transform: translateX(100%); opacity: 0; }
    to { transform: translateX(0); opacity: 1; }
  }
  
  @media (max-width: 768px) {
    .gift-threshold__products-grid {
      grid-template-columns: repeat(2, 1fr);
    }
  }
  
  @media (max-width: 480px) {
    .gift-threshold__products-grid {
      grid-template-columns: 1fr;
    }
  }
</style>

<div class="gift-threshold" 
     data-threshold="{{ threshold }}"
     data-cart-total="{{ cart_total }}"
     data-sample-id="{{ sample_product.variants.first.id }}"
     data-state="{{ initial_state }}">
  
  {%- if sample_product == blank -%}
    <div class="gift-threshold__error">
      <strong>⚠️ Błąd konfiguracji:</strong> Nie wybrano produktu próbki.
    </div>
    
  {%- else -%}
    
    <!-- Info State - Always Rendered -->
    <div class="gift-threshold__info" style="display: none;">
      <h3 class="gift-threshold__title">🎁 Darmowa próbka</h3>
      <p class="gift-threshold__message">
        {{ section.settings.message_before | replace: '[amount]', '<span class="gift-threshold__amount">' | append: remaining | money | append: '</span>' }}
      </p>
      
      {%- if section.settings.show_progress_bar -%}
        <div class="gift-threshold__progress">
          <div class="gift-threshold__progress-bar" style="width: {{ progress_percentage }}%"></div>
        </div>
        <div class="gift-threshold__progress-info">
          <span>{{ progress_percentage | round }}% do darmowej próbki</span>
          <span style="font-weight: 600;">Brakuje: {{ remaining | money }}</span>
        </div>
      {%- endif -%}
    </div>
    
    <!-- Selector State - Always Rendered -->
    <div class="gift-threshold__selector" style="display: none;">
      <h3 class="gift-threshold__title">{{ section.settings.choose_title }}</h3>
      <p style="text-align: center; color: #6b7280; margin-bottom: 20px;">
        Wybierz produkt, którego próbkę chcesz otrzymać bezpłatnie
      </p>
      
      <input type="text" 
             class="gift-threshold__search" 
             id="product-search" 
             placeholder="{{ section.settings.search_placeholder }}">
      
      <div class="gift-threshold__products-grid" id="products-list">
        {%- for product in collections.all.products limit: section.settings.products_limit -%}
          {%- unless product.id == sample_product.id or product.price == 0 -%}
            <div class="gift-threshold__product-card" 
                 data-product-id="{{ product.id }}"
                 data-product-title="{{ product.title | escape }}"
                 data-product-handle="{{ product.handle }}"
                 data-product-image="{{ product.featured_image | image_url: width: 300 }}">
              
              {%- if product.featured_image -%}
                <img class="gift-threshold__product-image" 
                     src="{{ product.featured_image | image_url: width: 300 }}"
                     alt="{{ product.title | escape }}"
                     loading="lazy">
              {%- else -%}
                <div class="gift-threshold__product-image" style="background: #f3f4f6;"></div>
              {%- endif -%}
              
              <div class="gift-threshold__product-title">{{ product.title | truncate: 45 }}</div>
              
              {%- if product.variants.size > 1 -%}
                <select class="gift-threshold__variant-select" 
                        data-product-id="{{ product.id }}"
                        onchange="window.giftThreshold.selectProductVariant(this)">
                  <option value="">Wybierz wariant</option>
                  {%- for variant in product.variants -%}
                    {%- if variant.available -%}
                      <option value="{{ variant.id }}" 
                              data-title="{{ variant.title | escape }}"
                              data-price="{{ variant.price | money }}">
                        {{ variant.title }}
                      </option>
                    {%- endif -%}
                  {%- endfor -%}
                </select>
              {%- else -%}
                <button class="gift-threshold__choose-btn"
                        onclick="window.giftThreshold.selectProduct('{{ product.title | escape }}', '{{ product.variants.first.id }}', '{{ product.variants.first.title | escape }}', '{{ product.handle }}', this)">
                  {{ section.settings.select_button_text }}
                </button>
              {%- endif -%}
            </div>
          {%- endunless -%}
        {%- endfor -%}
      </div>
      
      <div class="gift-threshold__selected" id="selected-product" style="display: none;">
        <h4>✅ Wybrany produkt</h4>
        <div class="gift-threshold__selected-info" id="selected-info">
          <!-- Will be populated by JavaScript -->
        </div>
        
        <button class="gift-threshold__button" id="add-sample-btn" disabled>
          {{ section.settings.add_button_text }}
        </button>
      </div>
    </div>
    
    <!-- Success State - Always Rendered -->
    <div class="gift-threshold__success" style="display: none;">
      <h3>🎁 {{ section.settings.success_title }}</h3>
      
      <div class="gift-threshold__success-info" id="success-info">
        {%- if selected_product_image != blank -%}
          <img src="{{ selected_product_image }}" 
               alt="{{ sample_info }}"
               class="gift-threshold__success-image">
        {%- endif -%}
        <div style="text-align: left;">
          <div style="font-weight: 700; color: #065f46; margin-bottom: 4px;">Wybrana próbka:</div>
          <div style="color: #059669;" id="success-sample-info">{{ sample_info }}</div>
        </div>
      </div>
      
      <p>{{ section.settings.success_message }}</p>
    </div>
    
  {%- endif -%}
</div>

<script>
// Gift Threshold System
window.giftThreshold = {
  selectedProduct: null,
  sampleId: document.querySelector('.gift-threshold').dataset.sampleId,
  
  selectProduct: function(title, variantId, variantTitle, handle, button) {
    document.querySelectorAll('.gift-threshold__product-card').forEach(card => {
      card.classList.remove('selected');
    });
    
    const card = button.closest('.gift-threshold__product-card');
    card.classList.add('selected');
    
    this.selectedProduct = {
      title: title,
      variantId: variantId,
      variantTitle: variantTitle,
      handle: handle,
      image: card.dataset.productImage
    };
    
    this.showSelectedProduct();
  },
  
  selectProductVariant: function(select) {
    if (!select.value) return;
    
    const card = select.closest('.gift-threshold__product-card');
    const option = select.options[select.selectedIndex];
    
    document.querySelectorAll('.gift-threshold__product-card').forEach(c => {
      c.classList.remove('selected');
    });
    
    card.classList.add('selected');
    
    this.selectedProduct = {
      title: card.dataset.productTitle,
      variantId: select.value,
      variantTitle: option.dataset.title || option.textContent,
      handle: card.dataset.productHandle,
      image: card.dataset.productImage,
      price: option.dataset.price
    };
    
    this.showSelectedProduct();
  },
  
  showSelectedProduct: async function() {
    const selectedDiv = document.getElementById('selected-product');
    const selectedInfo = document.getElementById('selected-info');
    const addBtn = document.getElementById('add-sample-btn');
    
    if (!this.selectedProduct) return;
    
    try {
      const response = await fetch(`/products/${this.selectedProduct.handle}.js`);
      const product = await response.json();
      
      const variant = product.variants.find(v => v.id == this.selectedProduct.variantId);
      
      selectedInfo.innerHTML = `
        <img src="${product.featured_image || this.selectedProduct.image}" 
             alt="${product.title}" 
             class="gift-threshold__selected-image">
        <div class="gift-threshold__selected-details">
          <div class="gift-threshold__selected-title">${product.title}</div>
          ${variant && variant.title !== 'Default Title' ? 
            `<div class="gift-threshold__selected-variant">Wariant: ${variant.title}</div>` : ''}
          <div class="gift-threshold__selected-price">Wartość: ${(variant ? variant.price / 100 : product.price / 100).toFixed(2)} zł</div>
        </div>
      `;
    } catch (error) {
      selectedInfo.innerHTML = `
        ${this.selectedProduct.image ? 
          `<img src="${this.selectedProduct.image}" 
                alt="${this.selectedProduct.title}" 
                class="gift-threshold__selected-image">` : ''}
        <div class="gift-threshold__selected-details">
          <div class="gift-threshold__selected-title">${this.selectedProduct.title}</div>
          ${this.selectedProduct.variantTitle !== 'Default Title' ? 
            `<div class="gift-threshold__selected-variant">Wariant: ${this.selectedProduct.variantTitle}</div>` : ''}
        </div>
      `;
    }
    
    selectedDiv.style.display = 'block';
    addBtn.disabled = false;
    selectedDiv.scrollIntoView({ behavior: 'smooth', block: 'nearest' });
  },
  
  addToCart: async function() {
    const addBtn = document.getElementById('add-sample-btn');
    
    if (!this.selectedProduct || !this.sampleId) return;
    
    addBtn.disabled = true;
    addBtn.textContent = 'Dodawanie...';
    
    try {
      const formData = new FormData();
      formData.append('id', this.sampleId);
      formData.append('quantity', '1');
      formData.append('properties[_is_free_sample]', 'true');
      formData.append('properties[_selected_product_title]', this.selectedProduct.title);
      formData.append('properties[_selected_product_handle]', this.selectedProduct.handle);
      formData.append('properties[_selected_product_image]', this.selectedProduct.image || '');
      formData.append('properties[Wybrany produkt]', 
        `${this.selectedProduct.title}${this.selectedProduct.variantTitle !== 'Default Title' ? 
          ' - ' + this.selectedProduct.variantTitle : ''}`);
      
      const response = await fetch('/cart/add.js', {
        method: 'POST',
        body: formData
      });
      
      if (response.ok) {
        // Update success info immediately
        const successInfo = document.getElementById('success-sample-info');
        if (successInfo) {
          successInfo.textContent = `${this.selectedProduct.title}${this.selectedProduct.variantTitle !== 'Default Title' ? 
            ' - ' + this.selectedProduct.variantTitle : ''}`;
        }
        
        // Switch to success state
        const section = document.querySelector('.gift-threshold');
        if (section) {
          section.dataset.state = 'success';
        }
      } else {
        throw new Error('Failed to add to cart');
      }
    } catch (error) {
      console.error('Error:', error);
      addBtn.disabled = false;
      addBtn.textContent = 'Spróbuj ponownie';
    }
  }
};

// Initialize
document.addEventListener('DOMContentLoaded', function() {
  const searchInput = document.getElementById('product-search');
  if (searchInput) {
    searchInput.addEventListener('input', function(e) {
      const query = e.target.value.toLowerCase();
      document.querySelectorAll('.gift-threshold__product-card').forEach(card => {
        const title = card.dataset.productTitle.toLowerCase();
        card.style.display = title.includes(query) ? '' : 'none';
      });
    });
  }
  
  const addBtn = document.getElementById('add-sample-btn');
  if (addBtn) {
    addBtn.onclick = () => window.giftThreshold.addToCart();
  }
});
</script>

{% schema %}
{
  "name": "Gift Threshold",
  "tag": "section",
  "class": "section",
  "settings": [
    {
      "type": "header",
      "content": "⚙️ Konfiguracja"
    },
    {
      "type": "product",
      "id": "sample_product",
      "label": "Produkt próbki (0 zł)",
      "info": "Wybierz uniwersalny produkt próbki z ceną 0 zł"
    },
    {
      "type": "number",
      "id": "threshold",
      "label": "Próg (PLN)",
      "default": 250
    },
    {
      "type": "checkbox",
      "id": "show_progress_bar",
      "label": "Pokaż pasek postępu",
      "default": true
    },
    {
      "type": "range",
      "id": "products_limit",
      "label": "Limit produktów",
      "min": 50,
      "max": 500,
      "step": 50,
      "default": 200
    },
    {
      "type": "header",
      "content": "📝 Teksty"
    },
    {
      "type": "textarea",
      "id": "message_before",
      "label": "Komunikat przed progiem",
      "default": "Dodaj produkty za [amount] aby otrzymać darmową próbkę!"
    },
    {
      "type": "text",
      "id": "choose_title",
      "label": "Tytuł wyboru",
      "default": "🎁 Wybierz produkt do próbki"
    },
    {
      "type": "text",
      "id": "search_placeholder",
      "label": "Placeholder wyszukiwarki",
      "default": "Szukaj produktu..."
    },
    {
      "type": "text",
      "id": "select_button_text",
      "label": "Tekst przycisku",
      "default": "Wybierz"
    },
    {
      "type": "text",
      "id": "add_button_text",
      "label": "Tekst dodania",
      "default": "Dodaj próbkę"
    },
    {
      "type": "text",
      "id": "success_title",
      "label": "Tytuł sukcesu",
      "default": "Próbka dodana!"
    },
    {
      "type": "textarea",
      "id": "success_message",
      "label": "Komunikat sukcesu",
      "default": "Twoja darmowa próbka zostanie dołączona do zamówienia."
    },
    {
      "type": "header",
      "content": "🎨 Kolory"
    },
    {
      "type": "color",
      "id": "section_bg_color",
      "label": "Tło sekcji",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "text_color",
      "label": "Kolor tekstu",
      "default": "#1f2937"
    },
    {
      "type": "color",
      "id": "accent_color",
      "label": "Kolor akcentu",
      "default": "#dc2626"
    },
    {
      "type": "color",
      "id": "button_bg_color",
      "label": "Tło przycisku",
      "default": "#1f2937"
    },
    {
      "type": "color",
      "id": "button_text_color",
      "label": "Tekst przycisku",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "button_hover_color",
      "label": "Hover przycisku",
      "default": "#374151"
    },
    {
      "type": "color",
      "id": "card_border_color",
      "label": "Obramowanie karty",
      "default": "#e5e7eb"
    },
    {
      "type": "color",
      "id": "card_selected_color",
      "label": "Karta wybrana",
      "default": "#10b981"
    },
    {
      "type": "header",
      "content": "📐 Rozmiary"
    },
    {
      "type": "range",
      "id": "section_padding",
      "label": "Padding",
      "min": 10,
      "max": 60,
      "step": 5,
      "default": 30,
      "unit": "px"
    },
    {
      "type": "range",
      "id": "section_radius",
      "label": "Zaokrąglenie",
      "min": 0,
      "max": 30,
      "step": 2,
      "default": 12,
      "unit": "px"
    },
    {
      "type": "range",
      "id": "progress_height",
      "label": "Wysokość paska",
      "min": 8,
      "max": 30,
      "step": 2,
      "default": 12,
      "unit": "px"
    },
    {
      "type": "range",
      "id": "message_font_size",
      "label": "Rozmiar tekstu",
      "min": 14,
      "max": 24,
      "step": 1,
      "default": 18,
      "unit": "px"
    },
    {
      "type": "range",
      "id": "title_font_size",
      "label": "Rozmiar tytułu",
      "min": 18,
      "max": 32,
      "step": 2,
      "default": 28,
      "unit": "px"
    },
    {
      "type": "select",
      "id": "text_align",
      "label": "Wyrównanie",
      "options": [
        {"value": "left", "label": "Lewo"},
        {"value": "center", "label": "Środek"},
        {"value": "right", "label": "Prawo"}
      ],
      "default": "center"
    },
    {
      "type": "range",
      "id": "grid_columns",
      "label": "Kolumny",
      "min": 3,
      "max": 6,
      "step": 1,
      "default": 5
    },
    {
      "type": "range",
      "id": "product_image_height",
      "label": "Wysokość obrazka",
      "min": 80,
      "max": 200,
      "step": 10,
      "default": 120,
      "unit": "px"
    },
    {
      "type": "range",
      "id": "grid_max_height",
      "label": "Max wysokość",
      "min": 300,
      "max": 600,
      "step": 50,
      "default": 450,
      "unit": "px"
    }
  ],
  "presets": [
    {
      "name": "Gift Threshold"
    }
  ],
  "templates": ["cart"]
}
{% endschema %}