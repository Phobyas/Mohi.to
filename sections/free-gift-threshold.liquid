{% comment %}
  Free Gift Threshold Section - Dawn Theme Styled Version
  File: sections/free-gift-threshold.liquid
{% endcomment %}

<!-- Add theme money format for JS -->
<script>
  window.theme = window.theme || {};
  window.theme.moneyFormat = {{ shop.money_format | json }};
</script>

{%- liquid
  # Get settings
  assign threshold_amount = section.settings.threshold | times: 100
  assign cart_total = cart.total_price
  assign remaining = threshold_amount | minus: cart_total
  
  # Check if threshold is met
  if cart_total >= threshold_amount
    assign threshold_met = true
  else
    assign threshold_met = false
  endif
  
  # Calculate progress
  assign progress_percentage = 0
  if cart_total > 0 and threshold_amount > 0
    assign progress_percentage = cart_total | times: 100.0 | divided_by: threshold_amount
    if progress_percentage > 100
      assign progress_percentage = 100
    endif
  endif
  
  # Check if any gift is already in cart
  assign has_gift = false
  assign selected_gift_info = ''
  
  for item in cart.items
    if item.properties._is_free_gift == 'true'
      assign has_gift = true
      assign selected_gift_info = item.product.title
      if item.variant.title != 'Default Title'
        assign selected_gift_info = selected_gift_info | append: ' - ' | append: item.variant.title
      endif
      break
    endif
  endfor
-%}

<div class="free-gift-threshold page-width" 
     data-threshold="{{ threshold_amount }}"
     data-section-id="{{ section.id }}">

  <div class="gift-container color-{{ section.settings.color_scheme }} gradient">
    <!-- Progress State -->
    <div class="gift-state gift-state--progress" data-state="progress" style="{% if has_gift or threshold_met %}display: none;{% endif %}">
      <div class="gift-header">
        <svg class="icon icon-gift" aria-hidden="true" focusable="false" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
          <rect x="3" y="8" width="18" height="13" rx="2"/>
          <path d="M12 8v13"/>
          <path d="M3 12h18"/>
          <path d="M7 8V6a2 2 0 012-2c1.5 0 3 1.5 3 3"/>
          <path d="M17 8V6a2 2 0 00-2-2c-1.5 0-3 1.5-3 3"/>
        </svg>
        <h3 class="gift-heading h4">{{ section.settings.title }}</h3>
      </div>
      
      <div class="gift-message" role="status" aria-live="polite">
        {% if cart.total_price == 0 %}
          {{ section.settings.empty_cart_message }}
        {% elsif remaining > 0 %}
          {{ section.settings.progress_message | replace: '[amount]', '<span class="gift-amount">' | append: remaining | money | append: '</span>' }}
        {% else %}
          {{ 'sections.free_gift.threshold_reached' | t }}
        {% endif %}
      </div>
      
      {%- if section.settings.show_progress_bar -%}
        <div class="gift-progress" id="gift-progress-{{ section.id }}">
          <div class="gift-progress-container">
            <div class="gift-progress-bar">
              <div class="gift-progress-fill" 
                   id="progress-fill-{{ section.id }}"
                   data-progress="{{ progress_percentage }}" 
                   style="width: {{ progress_percentage }}%;">
              </div>
            </div>
          </div>
          <div class="gift-progress-info">
            <div class="gift-progress-text">
              <span id="progress-current-{{ section.id }}">{{ cart_total | money }}</span>
              <span class="progress-separator">/</span>
              <span id="progress-target-{{ section.id }}">{{ threshold_amount | money }}</span>
            </div>
            <div class="gift-progress-percentage">
              <span id="progress-percent-{{ section.id }}">{{ progress_percentage | round }}</span>%
            </div>
          </div>
        </div>
      {%- endif -%}
    </div>

    <!-- Selector State -->
    <div class="gift-state gift-state--selector" data-state="selector" style="{% if threshold_met and has_gift == false %}display: block;{% else %}display: none;{% endif %}">
      <div class="gift-header gift-header--success">
        <svg class="icon icon-star" aria-hidden="true" focusable="false" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor">
          <path d="M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z"/>
        </svg>
        <h3 class="gift-heading h4">{{ 'sections.free_gift.choose_gift' | t }}</h3>
      </div>
      
      <div class="gift-message gift-message--success">
        {{ section.settings.threshold_message | replace: 'ðŸŽ‰', '' }}
      </div>
      
      <!-- Selected Product Display - MOVED TO BE MORE VISIBLE -->
      <div class="gift-selected" id="gift-selected-{{ section.id }}" style="display: none;">
        <div class="gift-selected-card">
          <div class="gift-selected-header">
            <h4 class="gift-selected-heading">{{ 'sections.free_gift.selected_gift' | t }}</h4>
          </div>
          <div class="gift-selected-info">
            <div class="gift-selected-media">
              <img class="gift-selected-image" src="" alt="" width="80" height="80">
            </div>
            <div class="gift-selected-details">
              <h5 class="gift-selected-title"></h5>
              <p class="gift-selected-label caption">{{ 'sections.free_gift.ready_to_add' | t }}</p>
            </div>
          </div>
          <div class="gift-selected-actions">
            <button class="button button--primary button--full-width gift-add-btn" type="button">
              <span>{{ section.settings.add_button_text }}</span>
              <div class="loading-overlay__spinner hidden">
                <svg aria-hidden="true" focusable="false" class="spinner" viewBox="0 0 66 66">
                  <circle class="path" fill="none" stroke-width="6" cx="33" cy="33" r="30"></circle>
                </svg>
              </div>
            </button>
          </div>
        </div>
      </div>
      
      <!-- Gift Products Grid -->
      <div class="gift-products-wrapper">
        <div class="gift-selection-header">
          <h4 class="gift-selection-title">{{ 'sections.free_gift.choose_one_gift' | t }}</h4>
          <p class="gift-selection-subtitle">{{ 'sections.free_gift.gift_selection_subtitle' | t }}</p>
        </div>
        
        <ul class="gift-products-grid grid grid--2-col-tablet-down grid--4-col-desktop" role="list">
          {%- assign has_products = false -%}
          {%- assign product_count = 0 -%}
          {%- for block in section.blocks -%}
            {%- if block.type == 'gift_product' and product_count < section.settings.max_gifts_displayed -%}
              {%- assign product = all_products[block.settings.product] -%}
              {%- if product and product.available -%}
                {%- assign has_products = true -%}
                {%- assign product_count = product_count | plus: 1 -%}
                <li class="grid__item">
                  <div class="gift-product-card" 
                       data-product-id="{{ product.id }}" 
                       data-block-id="{{ block.id }}"
                       data-product-title="{{ product.title | escape }}"
                       data-product-image="{{ product.featured_image | image_url: width: 300 }}"
                       data-first-variant-id="{% if product.variants.first %}{{ product.variants.first.id }}{% endif %}"
                       data-first-variant-price="{% if product.variants.first %}{{ product.variants.first.price }}{% endif %}">
                    <div class="gift-card-inner">
                      <div class="gift-card-selection">
                        <input type="radio" 
                               name="gift-selection-{{ section.id }}" 
                               id="gift-{{ block.id }}"
                               class="gift-radio"
                               value="{{ product.id }}">
                        <label for="gift-{{ block.id }}" class="gift-card-label">
                          {%- if product.featured_image -%}
                            <div class="gift-card-media">
                              <div class="media media--square">
                                <img src="{{ product.featured_image | image_url: width: 300 }}" 
                                     alt="{{ product.title | escape }}"
                                     loading="lazy"
                                     width="300"
                                     height="300">
                              </div>
                            </div>
                          {%- endif -%}
                          
                          <div class="gift-card-content">
                            <h3 class="gift-card-heading h5">
                              {{ product.title | truncate: 50 }}
                            </h3>
                            
                            {%- if product.variants.size > 1 -%}
                              <div class="gift-variant-info">
                                <span class="variant-count">{{ 'sections.free_gift.variants_available' | t: count: product.variants.size }}</span>
                              </div>
                            {%- endif -%}
                            
                            <div class="gift-card-check">
                              <svg class="icon icon-checkmark" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="3">
                                <path d="M20 6L9 17l-5-5"/>
                              </svg>
                            </div>
                          </div>
                        </label>
                      </div>
                      
                      {%- if product.variants.size > 1 -%}
                        <div class="gift-variant-selection" style="display: none;">
                          <div class="gift-select-wrapper">
                            <select class="gift-variant-select" data-product-id="{{ product.id }}" aria-label="{{ 'sections.free_gift.select_variant' | t }}">
                              <option value="">{{ 'sections.free_gift.choose_variant' | t }}</option>
                              {%- for variant in product.variants -%}
                                {%- if variant.available -%}
                                  <option value="{{ variant.id }}" 
                                          data-title="{{ variant.title | escape }}"
                                          data-price="{{ variant.price }}"
                                          data-image="{% if variant.image %}{{ variant.image | image_url: width: 300 }}{% else %}{{ product.featured_image | image_url: width: 300 }}{% endif %}">
                                    {{ variant.title }}
                                  </option>
                                {%- endif -%}
                              {%- endfor -%}
                            </select>
                            <svg aria-hidden="true" focusable="false" class="icon icon-caret" viewBox="0 0 10 6">
                              <path fill="currentColor" fill-rule="evenodd" d="M9.354.646a.5.5 0 00-.708 0L5 4.293 1.354.646a.5.5 0 00-.708.708l4 4a.5.5 0 00.708 0l4-4a.5.5 0 000-.708z" clip-rule="evenodd"/>
                            </svg>
                          </div>
                        </div>
                      {%- endif -%}
                    </div>
                  </div>
                </li>
              {%- endif -%}
            {%- endif -%}
          {%- endfor -%}
          
          {%- unless has_products -%}
            <li class="gift-products-empty grid__item">
              <p class="caption-large">
                {{ 'sections.free_gift.no_products_available' | t }}
              </p>
            </li>
          {%- endunless -%}
        </ul>
        
        {%- if product_count >= section.settings.max_gifts_displayed -%}
          <p class="gift-products-limit caption">{{ 'sections.free_gift.showing_maximum_products' | t: count: section.settings.max_gifts_displayed }}</p>
        {%- endif -%}
      </div>
    </div>

    <!-- Success State -->
    <div class="gift-state gift-state--success" data-state="success" style="{% if has_gift %}display: block;{% else %}display: none;{% endif %}visibility: hidden;">
      <div class="gift-header gift-header--complete">
        <svg class="icon icon-checkmark" aria-hidden="true" focusable="false" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
          <path d="M20 6L9 17l-5-5"/>
        </svg>
        <h3 class="gift-heading h4">{{ section.settings.title }}</h3>
      </div>
      
      <div class="gift-success-card">
        <div class="gift-success-message">
          <p class="gift-success-text">{{ section.settings.success_message }}</p>
          {%- if selected_gift_info != blank -%}
            <p class="gift-selected-info-text caption">{{ 'sections.free_gift.selected_gift_info' | t: gift: selected_gift_info }}</p>
          {%- endif -%}
        </div>
      </div>
    </div>
  </div>

</div>

<style>
  /* Main container */
  .free-gift-threshold {
    margin-bottom: 5rem;
  }
  
  .gift-container {
    position: relative;
    border-radius: var(--inputs-radius);
    padding: 2.4rem;
    border: 0.1rem solid rgba(var(--color-foreground), 0.08);
  }
  
  @media screen and (min-width: 750px) {
    .gift-container {
      padding: 3rem;
    }
  }
  
  /* Header styling */
  .gift-header {
    display: flex;
    align-items: center;
    gap: 1.2rem;
    margin-bottom: 2rem;
  }
  
  .gift-header .icon {
    width: 2rem;
    height: 2rem;
    flex-shrink: 0;
    color: rgba(var(--color-foreground), 0.75);
  }
  
  .gift-header--success .icon {
    color: rgb(16, 185, 129);
  }
  
  .gift-header--complete .icon {
    color: rgb(16, 185, 129);
  }
  
  .gift-heading {
    margin: 0;
    color: rgb(var(--color-foreground));
  }
  
  /* Messages */
  .gift-message {
    font-size: 1.5rem;
    line-height: calc(1 + 0.8 / var(--font-body-scale));
    color: rgba(var(--color-foreground), 0.75);
    margin-bottom: 2rem;
  }
  
  .gift-message--success {
    color: rgb(var(--color-foreground));
    font-weight: 500;
  }
  
  .gift-amount {
    color: rgb(var(--color-foreground));
    font-weight: 700;
    font-size: 1.6rem;
  }
  
  /* Fixed Progress Bar Styles */
  .gift-progress {
    margin-top: 2rem;
  }

  .gift-progress-container {
    position: relative;
    margin-bottom: 1.5rem;
  }

  .gift-progress-bar {
    height: 1.2rem;
    background-color: rgba(var(--color-foreground), 0.1);
    border-radius: 0.6rem;
    overflow: hidden;
    position: relative;
    border: 0.1rem solid rgba(var(--color-foreground), 0.05);
    width: 100%;
  }

  .gift-progress-fill {
    height: 100%;
    background-color: rgb(16, 185, 129) !important;
    background: linear-gradient(90deg, 
      rgb(16, 185, 129) 0%, 
      rgb(5, 150, 105) 100%) !important;
    transition: width 0.8s ease-out !important;
    position: relative;
    border-radius: 0.6rem;
    display: block;
  }

  .gift-progress-fill::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(90deg, 
      rgba(255, 255, 255, 0) 0%, 
      rgba(255, 255, 255, 0.3) 50%, 
      rgba(255, 255, 255, 0) 100%);
    animation: progressShimmer 2s infinite;
    border-radius: 0.6rem;
  }

  @keyframes progressShimmer {
    0% { 
      transform: translateX(-100%); 
    }
    100% { 
      transform: translateX(100%); 
    }
  }

  .gift-progress-info {
    display: flex;
    justify-content: space-between;
    align-items: center;
  }

  .gift-progress-text {
    font-size: 1.4rem;
    color: rgba(var(--color-foreground), 0.75);
    font-weight: 500;
  }

  .progress-separator {
    margin: 0 0.5rem;
    color: rgba(var(--color-foreground), 0.5);
  }

  .gift-progress-percentage {
    font-size: 1.4rem;
    font-weight: 700;
    color: rgb(16, 185, 129);
  }

  /* Force progress bar visibility */
  .gift-progress-fill[style*="width"] {
    background-color: rgb(16, 185, 129) !important;
    min-height: 1.2rem !important;
  }
  
  /* Gift Selection Header */
  .gift-selection-header {
    margin-bottom: 2rem;
    text-align: center;
  }
  
  .gift-selection-title {
    margin: 0 0 0.5rem 0;
    color: rgb(var(--color-foreground));
    font-size: 1.8rem;
  }
  
  .gift-selection-subtitle {
    margin: 0;
    color: rgba(var(--color-foreground), 0.65);
    font-size: 1.4rem;
  }
  
  .gift-products-limit {
    text-align: center;
    margin-top: 1rem;
    color: rgba(var(--color-foreground), 0.55);
  }
  
  /* Radio Button Product Cards - FIXED */
  .gift-card-selection {
    position: relative;
    height: 100%;
  }
  
  .gift-radio {
    position: absolute;
    top: 1rem;
    left: 1rem;
    width: 2rem;
    height: 2rem;
    opacity: 0;
    cursor: pointer;
    z-index: 10;
  }
  
  .gift-card-label {
    display: block;
    cursor: pointer;
    height: 100%;
    border: 0.2rem solid rgba(var(--color-foreground), 0.08);
    border-radius: var(--inputs-radius);
    background: rgb(var(--color-background));
    overflow: hidden;
    transition: all 0.3s ease;
    position: relative;
  }
  
  .gift-card-label:hover {
    transform: translateY(-0.2rem);
    box-shadow: 0 0.4rem 1.5rem rgba(var(--color-shadow), 0.15);
    border-color: rgba(var(--color-foreground), 0.15);
  }
  
  .gift-radio:checked + .gift-card-label {
    border-color: rgb(16, 185, 129);
    background: rgba(16, 185, 129, 0.04);
  }
  
  .gift-radio:checked + .gift-card-label .gift-card-check {
    opacity: 1;
    transform: scale(1);
  }
  
  /* Visual radio button indicator */
  .gift-card-label::before {
    content: '';
    position: absolute;
    top: 1rem;
    left: 1rem;
    width: 2rem;
    height: 2rem;
    border: 0.2rem solid rgba(var(--color-foreground), 0.3);
    border-radius: 50%;
    background: rgb(var(--color-background));
    transition: all 0.3s ease;
    z-index: 5;
  }
  
  .gift-radio:checked + .gift-card-label::before {
    border-color: rgb(16, 185, 129);
    background: rgb(16, 185, 129);
  }
  
  .gift-radio:checked + .gift-card-label::after {
    content: '';
    position: absolute;
    top: 1.5rem;
    left: 1.5rem;
    width: 1rem;
    height: 1rem;
    background: white;
    border-radius: 50%;
    z-index: 6;
  }
  
  /* Card Check Icon */
  .gift-card-check {
    position: absolute;
    top: 1rem;
    right: 1rem;
    width: 2.4rem;
    height: 2.4rem;
    background: rgb(16, 185, 129);
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    opacity: 0;
    transform: scale(0.8);
    transition: all 0.3s ease;
    z-index: 7;
  }
  
  .gift-card-check .icon {
    width: 1.4rem;
    height: 1.4rem;
    color: white;
  }
  
  /* Variant Info */
  .gift-variant-info {
    margin-top: 0.5rem;
    padding: 0.5rem;
    background: rgba(var(--color-foreground), 0.05);
    border-radius: 0.3rem;
  }
  
  .variant-count {
    font-size: 1.2rem;
    color: rgba(var(--color-foreground), 0.65);
    font-style: italic;
  }
  
  /* Variant Selection Panel */
  .gift-variant-selection {
    padding: 1.5rem;
    border-top: 0.1rem solid rgba(var(--color-foreground), 0.08);
    background: rgba(var(--color-foreground), 0.02);
    animation: slideDown 0.3s ease;
  }
  
  /* Override product card styles for radio version */
  .gift-card-selection .gift-card-inner {
    background: transparent;
    border: none;
    overflow: visible;
    transition: none;
    transform: none;
    box-shadow: none;
    cursor: default;
  }
  
  .gift-card-selection .gift-card-inner:hover {
    transform: none;
    box-shadow: none;
  }
  
  .gift-card-selection .gift-card-content {
    padding: 1.5rem;
  }
  
  .gift-card-selection .gift-card-media {
    background: rgba(var(--color-foreground), 0.04);
  }
  .gift-products-wrapper {
    background: rgba(var(--color-foreground), 0.03);
    border-radius: var(--inputs-radius);
    padding: 2rem;
    margin-bottom: 2rem;
    max-height: 50rem;
    overflow-y: auto;
  }
  
  .gift-products-wrapper::-webkit-scrollbar {
    width: 0.4rem;
  }
  
  .gift-products-wrapper::-webkit-scrollbar-track {
    background: rgba(var(--color-foreground), 0.05);
  }
  
  .gift-products-wrapper::-webkit-scrollbar-thumb {
    background: rgba(var(--color-foreground), 0.15);
    border-radius: 0.2rem;
  }
  
  .gift-products-grid {
    margin: 0;
    padding: 0;
    list-style: none;
    display: flex !important;
    flex-direction: row;
    justify-content: center;
    gap: 1.5rem;
    flex-wrap: wrap;
  }
  
  .gift-products-grid .grid__item {
    flex: 0 0 auto;
    max-width: 25rem;
    width: 100%;
  }
  
  @media screen and (min-width: 550px) {
    .gift-products-grid .grid__item {
      width: calc(50% - 0.75rem);
    }
  }
  
  @media screen and (min-width: 990px) {
    .gift-products-grid .grid__item {
      width: calc(25% - 1.125rem);
      max-width: 20rem;
    }
  }
  
  /* Product Cards */
  .gift-product-card {
    position: relative;
    height: 100%;
  }
  
  .gift-card-inner {
    background: rgb(var(--color-background));
    border: 0.1rem solid rgba(var(--color-foreground), 0.08);
    border-radius: var(--inputs-radius);
    overflow: hidden;
    height: 100%;
    display: flex;
    flex-direction: column;
    transition: transform var(--duration-short) ease, 
                box-shadow var(--duration-short) ease;
    cursor: pointer;
  }
  
  .gift-product-card:hover .gift-card-inner {
    transform: translateY(-0.2rem);
    box-shadow: 0 0.2rem 1rem rgba(var(--color-shadow), 0.1);
  }
  
  .gift-product-card.selected .gift-card-inner {
    border-color: rgb(16, 185, 129);
    background: rgba(16, 185, 129, 0.04);
  }
  
  /* Card Media - Square */
  .gift-card-media {
    position: relative;
    padding-bottom: 100%;
    background: rgba(var(--color-foreground), 0.04);
    overflow: hidden;
  }
  
  .gift-card-media .media {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
    padding: 1.5rem;
  }
  
  .gift-card-media img {
    max-width: 100%;
    max-height: 100%;
    width: auto;
    height: auto;
    object-fit: contain;
  }
  
  /* Card Content */
  .gift-card-content {
    padding: 1.5rem;
    display: flex;
    flex-direction: column;
    flex-grow: 1;
  }
  
  .gift-card-heading {
    margin: 0 0 1rem 0;
    font-size: 1.3rem;
    line-height: 1.4;
    min-height: 3.6rem;
    color: rgb(var(--color-foreground));
  }
  
  /* Select and Actions */
  .gift-card-actions {
    margin-top: auto;
  }
  
  .gift-select-wrapper {
    position: relative;
    width: 100%;
  }
  
  .gift-variant-select {
    appearance: none;
    background: rgb(var(--color-background));
    border: 0.1rem solid rgba(var(--color-foreground), 0.2);
    border-radius: var(--inputs-radius);
    color: rgb(var(--color-foreground));
    cursor: pointer;
    font-size: 1.3rem;
    padding: 1rem 3.5rem 1rem 1.5rem;
    width: 100%;
    height: 4.2rem;
    transition: border-color var(--duration-short) ease;
  }
  
  .gift-variant-select:hover {
    border-color: rgba(var(--color-foreground), 0.4);
  }
  
  .gift-variant-select:focus {
    outline: 0;
    border-color: rgb(var(--color-foreground));
    box-shadow: 0 0 0 0.1rem rgb(var(--color-foreground));
  }
  
  .gift-select-wrapper .icon-caret {
    position: absolute;
    right: 1.2rem;
    top: 50%;
    transform: translateY(-50%);
    pointer-events: none;
    width: 1rem;
    height: 0.6rem;
  }
  
  .gift-products-empty {
    grid-column: 1 / -1;
    text-align: center;
    padding: 4rem 2rem;
    color: rgba(var(--color-foreground), 0.55);
  }
  
  /* Selected Product Display - MORE EFFICIENT */
  .gift-selected {
    margin: 1.5rem 0;
    padding: 1.5rem;
    background: rgba(16, 185, 129, 0.06);
    border: 0.15rem solid rgb(16, 185, 129);
    border-radius: var(--inputs-radius);
    animation: slideDown 0.3s ease;
  }
  
  .gift-selected-header {
    margin-bottom: 1rem;
    text-align: center;
  }
  
  .gift-selected-heading {
    margin: 0;
    color: rgb(16, 185, 129);
    font-size: 1.4rem;
    font-weight: 600;
  }
  
  .gift-selected-card {
    background: transparent;
    border: none;
    border-radius: 0;
    padding: 0;
  }
  
  .gift-selected-info {
    display: flex;
    gap: 1rem;
    margin-bottom: 1.5rem;
    align-items: center;
    justify-content: center;
  }
  
  .gift-selected-media {
    flex-shrink: 0;
    width: 5rem;
    height: 5rem;
    background: rgb(var(--color-background));
    border-radius: var(--inputs-radius);
    display: flex;
    align-items: center;
    justify-content: center;
    padding: 0.6rem;
    overflow: hidden;
    border: 0.1rem solid rgba(var(--color-foreground), 0.1);
  }
  
  .gift-selected-image {
    max-width: 100%;
    max-height: 100%;
    width: auto;
    height: auto;
    object-fit: contain;
  }
  
  .gift-selected-details {
    flex: 1;
    text-align: left;
  }
  
  .gift-selected-title {
    margin: 0 0 0.3rem 0;
    color: rgb(var(--color-foreground));
    font-size: 1.4rem;
    font-weight: 600;
  }
  
  .gift-selected-label {
    color: rgba(var(--color-foreground), 0.65);
    margin: 0;
    font-style: italic;
    font-size: 1.2rem;
  }
  
  .gift-selected-actions {
    text-align: center;
  }
  
  .gift-add-btn {
    min-height: 4.4rem;
    font-size: 1.5rem;
    font-weight: 600;
    position: relative;
  }
  
  /* Responsive selected gift */
  @media screen and (max-width: 549px) {
    .gift-selected {
      padding: 1.2rem;
    }
    
    .gift-selected-info {
      flex-direction: column;
      text-align: center;
    }
    
    .gift-selected-details {
      text-align: center;
    }
    
    .gift-selected-media {
      width: 4rem;
      height: 4rem;
    }
  }
  
  /* Success State */
  .gift-success-card {
    background: rgba(16, 185, 129, 0.04);
    border-left: 0.4rem solid rgb(16, 185, 129);
    border-radius: var(--inputs-radius);
    padding: 2rem 0;
  }
  
  .gift-success-message {
    padding: 0 2rem;
  }
  
  .gift-success-text {
    margin: 0;
    color: rgb(var(--color-foreground));
    font-weight: 500;
    font-size: 1.6rem;
    line-height: 1.5;
  }
  
  .gift-selected-info-text {
    margin-top: 1rem;
    margin-bottom: 0;
    color: rgba(var(--color-foreground), 0.75);
    opacity: 0;
    transition: opacity 0.3s ease;
  }
  
  .gift-selected-info-text strong {
    color: rgb(var(--color-foreground));
  }
  
  /* Prevent FOUC for success state */
  .gift-state--success {
    opacity: 0;
    transition: opacity 0.4s ease;
  }
  
  .gift-state--success.loaded {
    opacity: 1;
  }
  
  .gift-state--success.loaded .gift-selected-info-text {
    opacity: 1;
  }
  
  /* Button Overrides */
  .gift-add-btn {
    width: 100%;
    position: relative;
  }
  
  .gift-add-btn .loading-overlay__spinner {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 2rem;
    height: 2rem;
  }
  
  .gift-add-btn .loading-overlay__spinner.hidden {
    display: none;
  }
  
  .gift-add-btn[aria-busy="true"] span {
    visibility: hidden;
  }
  
  /* Notification Toast */
  .gift-notification {
    position: fixed;
    top: 2rem;
    right: 2rem;
    padding: 1.5rem 2rem;
    border-radius: var(--inputs-radius);
    font-size: 1.4rem;
    font-weight: 500;
    z-index: 9999;
    max-width: 36rem;
    box-shadow: 0 0.5rem 2.5rem rgba(var(--color-shadow), 0.15);
    animation: slideInRight var(--duration-default) ease;
    cursor: pointer;
    transition: opacity var(--duration-short) ease,
                transform var(--duration-short) ease;
  }
  
  @keyframes slideInRight {
    from {
      transform: translateX(110%);
      opacity: 0;
    }
    to {
      transform: translateX(0);
      opacity: 1;
    }
  }
  
  .gift-notification--success {
    background: rgb(16, 185, 129);
    color: rgb(255, 255, 255);
  }
  
  .gift-notification--warning {
    background: rgb(245, 158, 11);
    color: rgb(255, 255, 255);
  }
  
  .gift-notification--error {
    background: rgb(239, 68, 68);
    color: rgb(255, 255, 255);
  }
  
  /* Loading State */
  .gift-threshold-loading {
    position: relative;
    pointer-events: none;
  }
  
  .gift-threshold-loading::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: rgba(var(--color-background), 0.7);
    border-radius: var(--inputs-radius);
    z-index: 1;
  }
  
  /* Responsive */
  @media screen and (max-width: 749px) {
    .gift-container {
      padding: 2rem;
    }
    
    .gift-products-wrapper {
      padding: 1.5rem;
    }
    
    .gift-selected-info {
      flex-direction: column;
      text-align: center;
    }
    
    .gift-notification {
      right: 1rem;
      left: 1rem;
      max-width: none;
    }
  }
  
  @media screen and (max-width: 550px) {
    .gift-card-content {
      padding: 1rem;
    }
  }
  
  /* Animations */
  .gift-state {
    animation: fadeIn var(--duration-default) ease;
  }
  
  @keyframes fadeIn {
    from { 
      opacity: 0;
      transform: translateY(0.5rem);
    }
    to { 
      opacity: 1;
      transform: translateY(0);
    }
  }
  
  /* Focus states */
  .gift-select-btn:focus-visible,
  .gift-add-btn:focus-visible,
  .gift-variant-select:focus-visible {
    outline: 0.2rem solid rgba(var(--color-foreground), 0.5);
    outline-offset: 0.3rem;
    box-shadow: 0 0 0 0.3rem rgb(var(--color-background)),
                0 0 0 0.5rem rgba(var(--color-foreground), 0.5);
  }
  
  /* Motion Reduced */
  @media (prefers-reduced-motion) {
    .gift-progress-fill,
    .gift-card-inner,
    .gift-state,
    .gift-notification,
    .gift-selected {
      animation: none;
      transition: none;
    }
    
    .gift-progress-fill::after {
      animation: none;
    }
  }
</style>

<!-- Include JavaScript file -->
{{ 'free-gift-threshold.js' | asset_url | script_tag }}

{% schema %}
{
  "name": "Free Gift - Threshold",
  "tag": "section",
  "class": "section",
  "settings": [
    {
      "type": "header",
      "content": "Basic Configuration"
    },
    {
      "type": "number",
      "id": "threshold",
      "label": "Threshold amount",
      "default": 250,
      "info": "Minimum cart value to receive a gift"
    },
    {
      "type": "checkbox",
      "id": "enabled",
      "label": "Enable free gift promotion",
      "default": true
    },
    {
      "type": "header",
      "content": "Text Content"
    },
    {
      "type": "text",
      "id": "title",
      "label": "Section title",
      "default": "Free gift with purchases over $250"
    },
    {
      "type": "textarea",
      "id": "progress_message",
      "label": "Progress message",
      "default": "Add products worth [amount] to receive a free gift!",
      "info": "Use [amount] placeholder for remaining amount"
    },
    {
      "type": "text",
      "id": "threshold_message",
      "label": "Threshold reached message",
      "default": "Congratulations! Choose your free gift:"
    },
    {
      "type": "text",
      "id": "success_message",
      "label": "Success message",
      "default": "Gift has been added to your cart!"
    },
    {
      "type": "text",
      "id": "add_button_text",
      "label": "Add gift button text",
      "default": "Add free gift"
    },
    {
      "type": "text",
      "id": "empty_cart_message",
      "label": "Empty cart message",
      "default": "Your cart is empty. Add products to receive a free gift!"
    },
    {
      "type": "header",
      "content": "Design"
    },
    {
      "type": "color_scheme",
      "id": "color_scheme",
      "label": "Color scheme",
      "default": "scheme-1"
    },
    {
      "type": "checkbox",
      "id": "show_progress_bar",
      "label": "Show progress bar",
      "default": true
    },
    {
      "type": "range",
      "id": "section_padding_top",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "Section padding top",
      "default": 36
    },
    {
      "type": "range",
      "id": "section_padding_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "Section padding bottom",
      "default": 36
    },
    {
      "type": "header",
      "content": "Gift Selection"
    },
    {
      "type": "range",
      "id": "max_gifts_displayed",
      "min": 3,
      "max": 15,
      "step": 1,
      "label": "Maximum gifts displayed",
      "default": 5
    },
    {
      "type": "checkbox",
      "id": "auto_remove_gifts",
      "label": "Auto-remove gifts below threshold",
      "default": true,
      "info": "Automatically removes gifts when cart falls below threshold"
    },
    {
      "type": "checkbox",
      "id": "prevent_multiple_gifts",
      "label": "Prevent multiple gifts",
      "default": true,
      "info": "Only allows one free gift per order"
    }
  ],
  "blocks": [
    {
      "type": "gift_product",
      "name": "Gift Product",
      "limit": 15,
      "settings": [
        {
          "type": "product",
          "id": "product",
          "label": "Select gift product"
        },
        {
          "type": "text",
          "id": "custom_title",
          "label": "Custom title (optional)",
          "info": "Override the product title for this gift"
        },
        {
          "type": "image_picker",
          "id": "custom_image",
          "label": "Custom image (optional)",
          "info": "Override the product image for this gift"
        },
        {
          "type": "checkbox",
          "id": "featured",
          "label": "Featured gift",
          "default": false,
          "info": "Mark this gift as featured (will appear first)"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Free Gift - Threshold",
      "blocks": [
        {
          "type": "gift_product"
        },
        {
          "type": "gift_product"
        },
        {
          "type": "gift_product"
        }
      ]
    }
  ],
  "max_blocks": 15,
  "enabled_on": {
    "templates": ["*"]
  }
}
{% endschema %}